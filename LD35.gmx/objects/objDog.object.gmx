<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDog</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objCanCollide</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup default variables

moveSpeed = room_speed / 12;
baseSpeed = moveSpeed;

canBark = true;

maxSprint = 100;
currentSprint = maxSprint;
sprinting = false;

sneaking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow barking

canBark = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control movement

if (scrIsUpPressed()) {
  phy_speed_y = -1 * moveSpeed;
  //y -= moveSpeed;
} else if (scrIsDownPressed()) {
  //y += moveSpeed;
  phy_speed_y = moveSpeed;
} else {
  phy_speed_y = 0;
}
if (scrIsLeftPressed()) {
  //x -= moveSpeed;
   phy_speed_x = -1 * moveSpeed;
} else if (scrIsRightPressed()) {
  //x += moveSpeed;
   phy_speed_x = moveSpeed;
} else {
  phy_speed_x = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///REDO:  Keep within boundaries


var newx = phy_position_x + phy_speed_x;
var newy = phy_position_y + phy_speed_y;

if (newx &lt; (-1 * sprite_width) || newx &gt; (room_width + sprite_width)) {
  phy_speed_x *= -1;
}

if (newy &lt; 22 ) {
  phy_speed_y = 0;
  phy_position_y = 22
} else if (newy &gt; 512) {
  phy_speed_y = 0;
  phy_position_y = 512;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprint handler
if (!sprinting &amp;&amp; currentSprint &lt; maxSprint) {
  currentSprint++;
} else if (sprinting) {
  if (currentSprint &gt; 0 &amp;&amp; keyboard_check(vk_control)) {
    currentSprint--;
  } else {
    sprinting = false;
    moveSpeed = baseSpeed;
  }
} else {
  if (keyboard_check(vk_control) &amp;&amp; currentSprint &gt; (0.2 * maxSprint) &amp;&amp; !sneaking) {
    sprinting = true;
    moveSpeed *= 2;
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sneak handling
if (sneaking &amp;&amp; !keyboard_check(vk_shift)) {
  sneaking = false;
  moveSpeed = baseSpeed;
} else if (!sneaking &amp;&amp; keyboard_check(vk_shift)) &amp;&amp; !sprinting {
  sneaking = true;
  moveSpeed *= 0.75;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCanCollide">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Empty
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws indicators for dog stuff

var color = c_green;

if (currentSprint &lt;= (0.2 * maxSprint)) {
  color = c_red;    
}

draw_text_color(100, 25, string(currentSprint) + " / " + string(maxSprint), color, color, color, color, 100);

if (canBark) {
  draw_text_color(300, 25, "Can bark!", c_green, c_green, c_green, c_green, 100);
} else {
  draw_text_color(300, 25, "Can't bark", c_red, c_red, c_red, c_red, 100);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create bark

if (canBark) {
  var bark = instance_create(x, y, objBark);
  var barkV = instance_create(x, y, objBarkVisible);
  bark.parent = self.id;
  barkV.parent = self.id;
  alarm[0] = 6 * room_speed;
  canBark = false;
  
  audio_play_sound(sndBark, 100, false);  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
